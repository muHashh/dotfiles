{"title":"clangd","properties":{"clangd.detectExtensionConflicts":{"default":true,"description":"Warn about conflicting extensions and suggest disabling them.","type":"boolean"},"clangd.path":{"scope":"machine-overridable","default":"clangd","description":"The path to clangd executable, e.g.: \/usr\/bin\/clangd.","type":"string"},"clangd.arguments":{"description":"Arguments for clangd server.","default":[],"items":{"type":"string"},"type":"array"},"clangd.serverCompletionRanking":{"default":true,"description":"Always rank completion items on the server as you type. This produces more accurate results at the cost of higher latency than client-side filtering.","type":"boolean"},"clangd.inactiveRegions.opacity":{"default":0.55,"description":"Opacity of inactive regions (used only if clangd.inactiveRegions.useBackgroundHighlight=false)","type":"number"},"clangd.restartAfterCrash":{"default":true,"description":"Auto restart clangd (up to 4 times) if it crashes.","type":"boolean"},"clangd.checkUpdates":{"default":false,"description":"Check for language server updates on startup.","type":"boolean"},"clangd.onConfigChanged":{"default":"prompt","type":"string","enum":["prompt","restart","ignore"],"enumDescriptions":["Prompt the user for restarting the server","Automatically restart the server","Do nothing"],"description":"What to do when clangd configuration files are changed. Ignored for clangd 12+, which can reload such files itself."},"clangd.inactiveRegions.useBackgroundHighlight":{"default":false,"description":"Use a background highlight rather than opacity to identify inactive preprocessor regions.","type":"boolean"},"clangd.trace":{"description":"Names a file that clangd should log a performance trace to, in chrome trace-viewer JSON format.","type":"string"},"clangd.fallbackFlags":{"description":"Extra clang flags used to parse files when no compilation database is found.","default":[],"items":{"type":"string"},"type":"array"},"clangd.semanticHighlighting":{"deprecationMessage":"Legacy semanticHighlights is no longer supported. Please use `editor.semanticHighlighting.enabled` instead.","default":true,"description":"Enable semantic highlighting in clangd.","type":"boolean"}},"type":"object"}